{"version":3,"sources":["webpack:///../node_modules/moment/locale sync [/\\\\](es-us(\\.js)","webpack:///./components/air-datepicker/air-datepicker.js","webpack:///./components/air-datepicker/air-datepicker.scss","webpack:///./components/card-product/card-product.js","webpack:///./components/card-product/card-product.scss","webpack:///./components/checkbox/checkbox.js","webpack:///./components/checkbox/checkbox.scss","webpack:///./components/pagination/jquery.paging.js","webpack:///./components/pagination/pagination.js","webpack:///./components/pagination/pagination.scss","webpack:///./components/rate-btn/rate-btn.js","webpack:///./components/rate-btn/rate-btn.scss","webpack:///./components/slider-range/slider-range.js","webpack:///./components/slider-range/slider-range.scss"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sG;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AACC;AACI;;AAE5B,mBAAO,CAAC,8EAAuB;;AAE/B,mBAAO,CAAC,iEAA4B;;AAEpC,6CAAM;AACN,6CAAC;AACD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,gBAAgB,6CAAC;AACjB;AACA,2BAA2B,6CAAC;AAC5B;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,wBAAwB,6CAAC;AACzB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;AACA,wBAAwB,6CAAC;AACzB;;AAEA;AACA;AACA,8BAA8B,6CAAC;;AAE/B;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,6CAAC;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,6CAAC;AACP;AACA,GAAG;;AAEH;AACA;AACA,iBAAiB,6CAAC;AAClB;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,6CAAC;AACzB;;AAEA;AACA,MAAM,6CAAC;AACP,MAAM,6CAAC;AACP,MAAM,6CAAC;AACP;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB,6CAAC;AAClB;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,6CAAC;AACzB;;AAEA;AACA,MAAM,6CAAC,4EAA4E,6CAAM,2BAA2B,KAAK,6CAAM,2BAA2B;AAC1J,MAAM,6CAAC,yEAAyE,6CAAM;AACtF,MAAM,6CAAC,uEAAuE,6CAAM;AACpF;AACA;;AAEA,sBAAsB,6CAAC;;AAEvB;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC,E;;;;;;;;;;;AC1ID,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AACD;;AAEtB,mBAAO,CAAC,wEAAqB;;AAE7B,mBAAO,CAAC,iEAA4B;;AAEpC,mBAAO,CAAC,yEAAgC;;AAExC,6CAAC;AACD,EAAE,6CAAC;AACH,IAAI,6CAAC;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC,E;;;;;;;;;;;AClBD,uC;;;;;;;;;;;ACAA,mBAAO,CAAC,4DAAiB,E;;;;;;;;;;;ACAzB,uC;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACf,2CAA2C;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA,mEAAmE;AACnE;AACA;AACA,sFAAsF;AACtF;AACA,8DAA8D;AAC9D;AACA;AACA,qFAAqF;AACrF;AACA,4DAA4D;AAC5D;AACA;AACA,mFAAmF;AACnF;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA,mEAAmE;;AAEnE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW;AACX;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;;AAEA,sEAAsE;;AAEtE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;;AAEA,kFAAkF;;AAElF;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA,+DAA+D;;AAE/D,6CAA6C;;AAE7C,8DAA8D;;AAE9D;AACA;;AAEA;;AAEA;AACA;AACA,kDAAkD;;AAElD;;AAEA;AACA;AACA,sDAAsD;;AAEtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,gB;;;;;;;;;;;;;ACjeD;AAAA;AAAA;AAAuB;;AAEvB,mBAAO,CAAC,iEAAiB;;AAEzB,mBAAO,CAAC,kEAAmB;;AAE3B,6CAAC;AACD,EAAE,6CAAC;AACH,wBAAwB,6CAAC;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA,kCAAkC,mBAAmB,KAAK,MAAM,MAAM,oBAAoB;AAC1F,OAAO;;AAEP;AACA;AACA;AACA;AACA,yDAAyD,WAAW;AACpE;;AAEA;AACA,+DAA+D,WAAW;AAC1E;;AAEA,kFAAkF,WAAW;;AAE7F;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,+DAA+D,WAAW;AAC1E;;AAEA;;AAEA;AACA;AACA,+DAA+D,WAAW;AAC1E;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL,GAAG;AACH,CAAC,E;;;;;;;;;;;ACpHD,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAuB;;AAEvB,mBAAO,CAAC,4DAAiB;;AAEzB,6CAAC;AACD;AACA;AACA,iBAAiB,6CAAC;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,EAAE,6CAAC;AACH,CAAC,E;;;;;;;;;;;ACrBD,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AACW;AACH;;AAE/B,mBAAO,CAAC,wEAAqB;;AAE7B,6CAAC;AACD,EAAE,6CAAC;AACH,2BAA2B,6CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,6CAAC;AACrC;AACA,oCAAoC,6CAAC;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,CAAC,E;;;;;;;;;;;ACtDD,uC","file":"guide~products.js","sourcesContent":["var map = {\n\t\"./es-us\": \"../node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../node_modules/moment/locale/es-us.js\",\n\t\"./ru\": \"../node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../node_modules/moment/locale/ru.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../node_modules/moment/locale sync recursive [/\\\\\\\\](es-us(\\\\.js)?|ru(\\\\.js)?)$\";","import $ from 'jquery';\nimport 'air-datepicker';\nimport moment from 'moment';\n\nrequire('./air-datepicker.scss');\n\nrequire('@/components/button/button');\n\nmoment.lang('ru');\n$(() => {\n  function formatDate(strDate) {\n    if (!strDate.length) {\n      return '';\n    }\n\n    let strFormattedDate = '';\n\n    try {\n      strFormattedDate = strDate.split('.', 3).reverse().join('-');\n    } catch (error) {\n      console.debug(error);\n    }\n\n    return strFormattedDate;\n  }\n\n  const $body = $('body');\n  $body.find('.js-air-datepicker.air-datepicker_inline').each(function () {\n    const $airDatepicker = $(this);\n    const attrMinDate = $airDatepicker.data('min-date');\n    let minDateOption;\n\n    if (attrMinDate === 'today') {\n      minDateOption = new Date();\n    } else if (attrMinDate) {\n      try {\n        minDateOption = new Date(attrMinDate);\n      } catch (error) {\n        console.debug(error);\n      }\n    }\n\n    const $datepicker = $('.js-air-datepicker__wrapper', $airDatepicker);\n    $datepicker.datepicker({\n      range: true,\n      inline: true,\n      navTitles: {\n        days: 'MM yyyy'\n      },\n      minDate: minDateOption\n    });\n    let $parentDropdown = $airDatepicker.closest('.js-dropdown');\n    const targetDropdowns = $airDatepicker.attr('data-target-dropdown');\n\n    if (targetDropdowns) {\n      $parentDropdown = $(targetDropdowns);\n    }\n\n    if ($parentDropdown.length) {\n      const datesFromInputs = [];\n      const $inputDateStart = $('.js-input-text_date_start .js-input-text__field', $parentDropdown);\n\n      if ($inputDateStart.length) {\n        let valueInputDate = $inputDateStart.val();\n        valueInputDate = formatDate(valueInputDate);\n        if (valueInputDate) datesFromInputs.push(new Date(valueInputDate));\n      }\n\n      const $inputDateEnd = $('.js-input-text_date_end .js-input-text__field', $parentDropdown);\n\n      if ($inputDateEnd.length) {\n        let valueInputDate = $inputDateEnd.val();\n        valueInputDate = formatDate(valueInputDate);\n        if (valueInputDate) datesFromInputs.push(new Date(valueInputDate));\n      }\n\n      if (datesFromInputs.length) {\n        $datepicker.data('datepicker').selectDate(datesFromInputs);\n      }\n    }\n\n    if (!$datepicker.data('datepicker').selectedDates.length) {\n      $('.js-air-datepicker__clear-button', $airDatepicker).addClass('air-datepicker_hidden');\n    }\n  });\n\n  function handlerClickClearBtn(event) {\n    event.preventDefault();\n    const $btn = $(event.currentTarget);\n    const $airDatepicker = $btn.closest('.js-air-datepicker');\n    $airDatepicker.find('.js-air-datepicker__wrapper').data('datepicker').clear();\n    let $parentDropdown = $airDatepicker.closest('.js-dropdown');\n    const targetDropdowns = $airDatepicker.attr('data-target-dropdown');\n\n    if (targetDropdowns) {\n      $parentDropdown = $(targetDropdowns);\n    }\n\n    if ($parentDropdown.length) {\n      $('.js-input-text_date_start .js-input-text__field', $parentDropdown).val('');\n      $('.js-input-text_date_end .js-input-text__field', $parentDropdown).val('');\n      $('.js-input-text_date_range .js-input-text__field', $parentDropdown).val('');\n    }\n\n    $btn.closest('.js-air-datepicker__clear-button').addClass('air-datepicker_hidden');\n  }\n\n  $body.on('click', '.js-air-datepicker .js-air-datepicker__clear-button .js-button', handlerClickClearBtn);\n\n  function handlerClickSubmitBtn(event) {\n    event.preventDefault();\n    const $btn = $(event.currentTarget);\n    let $parentDropdown = $btn.closest('.js-dropdown');\n    const $airDatepicker = $btn.closest('.js-air-datepicker');\n    const dates = $airDatepicker.find('.js-air-datepicker__wrapper').data('datepicker').selectedDates;\n    const targetDropdowns = $airDatepicker.attr('data-target-dropdown');\n\n    if (targetDropdowns) {\n      $parentDropdown = $(targetDropdowns);\n    }\n\n    if ($parentDropdown.length) {\n      $('.js-input-text_date_range .js-input-text__field', $parentDropdown).val(`${moment(dates[0]).format('D MMM')} - ${moment(dates[1]).format('D MMM')}`);\n      $('.js-input-text_date_start .js-input-text__field', $parentDropdown).val(moment(dates[0]).format('DD.MM.YYYY'));\n      $('.js-input-text_date_end .js-input-text__field', $parentDropdown).val(moment(dates[1]).format('DD.MM.YYYY'));\n      $parentDropdown.removeClass('dropdown_aсtivated');\n    }\n\n    const $clearBtn = $('.js-air-datepicker__clear-button', $airDatepicker);\n\n    if (dates.length) {\n      $clearBtn.removeClass('air-datepicker_hidden');\n    } else {\n      $clearBtn.addClass('air-datepicker_hidden');\n    }\n  }\n\n  $body.on('click', '.js-air-datepicker .js-air-datepicker__submit-button .js-button', handlerClickSubmitBtn);\n});","// extracted by mini-css-extract-plugin","import $ from 'jquery';\nimport 'owl.carousel';\n\nrequire('./card-product.scss');\n\nrequire('@/components/button/button');\n\nrequire('@/components/rate-btn/rate-btn');\n\n$(() => {\n  $('.js-card-product__carousel', 'body').each(function () {\n    $(this).owlCarousel({\n      nav: true,\n      dots: true,\n      items: 1,\n      loop: true\n    });\n  });\n});","// extracted by mini-css-extract-plugin","require('./checkbox.scss');","// extracted by mini-css-extract-plugin","/**\n * @license jQuery paging plugin v1.3.1 23/06/2014\n * http://www.xarg.org/2011/09/jquery-pagination-revised/\n *\n * Copyright (c) 2011, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n(function ($, window, undefined) {\n  $[\"fn\"][\"paging\"] = function (number, opts) {\n    var self = this,\n        Paging = {\n      \"setOptions\": function (opts) {\n        var parseFormat = function (format) {\n          var gndx = 0,\n              group = 0,\n              num = 1,\n              res = {\n            fstack: [],\n            // format stack\n            asterisk: 0,\n            // asterisk?\n            inactive: 0,\n            // fill empty pages with inactives up to w?\n            blockwide: 5,\n            // width of number block\n            current: 3,\n            // position of current element in number block\n            rights: 0,\n            // num of rights\n            lefts: 0 // num of lefts\n\n          },\n              tok,\n              pattern = /[*<>pq\\[\\]().-]|[nc]+!?/g;\n          var known = {\n            \"[\": \"first\",\n            \"]\": \"last\",\n            \"<\": \"prev\",\n            \">\": \"next\",\n            \"q\": \"left\",\n            \"p\": \"right\",\n            \"-\": \"fill\",\n            \".\": \"leap\"\n          },\n              count = {};\n\n          while (tok = pattern[\"exec\"](format)) {\n            tok = \"\" + tok;\n\n            if (undefined === known[tok]) {\n              if (\"(\" === tok) {\n                group = ++gndx;\n              } else if (\")\" === tok) {\n                group = 0;\n              } else if (num) {\n                if (\"*\" === tok) {\n                  res.asterisk = 1;\n                  res.inactive = 0;\n                } else {\n                  // number block is the only thing left here\n                  res.asterisk = 0;\n                  res.inactive = \"!\" === tok.charAt(tok.length - 1);\n                  res.blockwide = tok[\"length\"] - res.inactive;\n\n                  if (!(res.current = 1 + tok.indexOf(\"c\"))) {\n                    res.current = 1 + res.blockwide >> 1;\n                  }\n                }\n\n                res.fstack.push({\n                  ftype: \"block\",\n                  // type\n                  fgroup: 0,\n                  // group\n                  fpos: 0 // pos\n\n                });\n                num = 0;\n              }\n            } else {\n              res.fstack.push({\n                ftype: known[tok],\n                // type\n                fgroup: group,\n                // group\n                fpos: undefined === count[tok] ? count[tok] = 1 : ++count[tok] // pos\n\n              });\n              if (\"q\" === tok) ++res.lefts;else if (\"p\" === tok) ++res.rights;\n            }\n          }\n\n          return res;\n        };\n\n        Paging.opts = $.extend(Paging.opts || {\n          \"lapping\": 0,\n          // number of elements overlap\n          \"perpage\": 10,\n          // number of elements per page\n          \"page\": 1,\n          // current page\n          \"stepwidth\": 1,\n          // stepwidth for prev/next -> if = 0 then blockwise steps\n          \"refresh\": {\n            \"interval\": 10,\n            \"url\": null\n          },\n          // refresh callback information\n          \"format\": \"\",\n          // visual format string\n          \"lock\": false,\n          // set to true, if you want to disable the pagination for a while. \n          \"circular\": false,\n          // set to true if you want the next/prev buttons go circular\n          \"onClick\": null,\n          // Alternative click handler to bypass onSelect mechanism\n          \"onFormat\": function (type) {// callback for every format element\n\n            /** EXAMPLE **\n                 switch (type) {\n                     case 'block':\n                         if (!this.active)\n                            return '<span class=\"disabled\">' + this.value + '</span>';\n                        else if (this.value != this.page)\n                            return '<em><a href=\"#' + this.value + '\">' + this.value + '</a></em>';\n                        return '<span class=\"current\">' + this.value + '</span>';\n                     case 'right':\n                    case 'left':\n                         if (!this.active) {\n                            return \"\";\n                        }\n                        return '<a href=\"#' + this.value + '\">' + this.value + '</a>';\n                     case 'next':\n                         if (this.active) {\n                            return '<a href=\"#' + this.value + '\" class=\"next\">Next &raquo;</a>';\n                        }\n                        return '<span class=\"disabled\">Next &raquo;</span>';\n                     case 'prev':\n                         if (this.active) {\n                            return '<a href=\"#' + this.value + '\" class=\"prev\">&laquo; Previous</a>';\n                        }\n                        return '<span class=\"disabled\">&laquo; Previous</span>';\n                     case 'first':\n                         if (this.active) {\n                            return '<a href=\"#' + this.value + '\" class=\"first\">|&lt;</a>';\n                        }\n                        return '<span class=\"disabled\">|&lt;</span>';\n                     case 'last':\n                         if (this.active) {\n                            return '<a href=\"#' + this.value + '\" class=\"prev\">&gt;|</a>';\n                        }\n                        return '<span class=\"disabled\">&gt;|</span>';\n                     case 'fill':\n                        if (this.active) {\n                            return \"...\";\n                        }\n                }\n                return \"\"; // return nothing for missing branches\n                 **/\n          },\n          \"onSelect\": function (page) {\n            // callback for page selection\n\n            /** EXAMPLE SLICE **\n             var data = this.slice;\n             content.slice(prev[0], prev[1]).css('display', 'none');\n            content.slice(data[0], data[1]).css('display', 'block');\n             prev = data;\n             **/\n\n            /** EXAMPLE AJAX **\n             $.ajax({\n                \"url\": '/data.php?start=' + this.slice[0] + '&end=' + this.slice[1] + '&page=' + page,\n                \"success\": function(data) {\n                    // content replace\n                }\n            });\n             **/\n            // Return code indicates if the link of the clicked format element should be followed (otherwise only the click-event is used)\n            return true;\n          },\n          \"onRefresh\": function (json) {// callback for new data of refresh api\n\n            /** EXAMPLE **\n            if (json.number) {\n                Paging.setNumber(json.number);\n            }\n             if (json.options) {\n                Paging.setOptions(json.options);\n            }\n             Paging.setPage(); // Call with empty params to reload the paginator\n            **/\n          }\n        }, opts || {});\n        Paging.opts[\"lapping\"] |= 0;\n        Paging.opts[\"perpage\"] |= 0;\n        if (Paging.opts[\"page\"] !== null) Paging.opts[\"page\"] |= 0; // If the number of elements per page is less then 1, set it to default\n\n        if (Paging.opts[\"perpage\"] < 1) {\n          Paging.opts[\"perpage\"] = 10;\n        }\n\n        if (Paging.interval) window.clearInterval(Paging.interval);\n\n        if (Paging.opts[\"refresh\"][\"url\"]) {\n          Paging.interval = window.setInterval(function () {\n            $[\"ajax\"]({\n              \"url\": Paging.opts[\"refresh\"][\"url\"],\n              \"success\": function (data) {\n                if (typeof data === \"string\") {\n                  try {\n                    data = $[\"parseJSON\"](data);\n                  } catch (o) {\n                    return;\n                  }\n                }\n\n                Paging.opts[\"onRefresh\"](data);\n              }\n            });\n          }, 1000 * Paging.opts[\"refresh\"][\"interval\"]);\n        }\n\n        Paging.format = parseFormat(Paging.opts[\"format\"]);\n        return Paging;\n      },\n      \"setNumber\": function (number) {\n        Paging.number = undefined === number || number < 0 ? -1 : number;\n        return Paging;\n      },\n      \"setPage\": function (page) {\n        if (Paging.opts[\"lock\"]) {\n          Paging.opts[\"onSelect\"](0, self);\n          return Paging;\n        }\n\n        if (undefined === page) {\n          page = Paging.opts[\"page\"];\n\n          if (null === page) {\n            return Paging;\n          }\n        } else if (Paging.opts[\"page\"] == page) {\n          // Necessary to be ==, not ===\n          return Paging;\n        }\n\n        Paging.opts[\"page\"] = page |= 0;\n        var number = Paging.number;\n        var opts = Paging.opts;\n        var rStart, rStop;\n        var pages, buffer;\n        var groups = 1,\n            format = Paging.format;\n        var data, tmp, node, lapping;\n        var count = format.fstack[\"length\"],\n            i = count; // If the lapping is greater than perpage, reduce it to perpage - 1 to avoid endless loops\n\n        if (opts[\"perpage\"] <= opts[\"lapping\"]) {\n          opts[\"lapping\"] = opts[\"perpage\"] - 1;\n        }\n\n        lapping = number <= opts[\"lapping\"] ? 0 : opts[\"lapping\"] | 0; // If the number is negative, the value doesn\"t matter, we loop endlessly with a constant width\n\n        if (number < 0) {\n          number = -1;\n          pages = -1;\n          rStart = Math.max(1, page - format.current + 1 - lapping);\n          rStop = rStart + format.blockwide;\n        } else {\n          /* Calculate the number of pages\n           * http://www.xarg.org/2016/10/derivation-of-pagination-calculation/\n           *\n           */\n          pages = 1 + Math.ceil((number - opts[\"perpage\"]) / (opts[\"perpage\"] - lapping)); // If current page is negative, start at the end and\n          // Set the current page into a valid range, includes 0, which is set to 1\n\n          page = Math.max(1, Math.min(page < 0 ? 1 + pages + page : page, pages)); // Do we need to print all numbers?\n\n          if (format.asterisk) {\n            rStart = 1;\n            rStop = 1 + pages; // Disable :first and :last for asterisk mode as we see all buttons\n\n            format.current = page;\n            format.blockwide = pages;\n          } else {\n            // If no, start at the best position and stop at max width or at num of pages\n            rStart = Math.max(1, Math.min(page - format.current, pages - format.blockwide) + 1);\n            rStop = format.inactive ? rStart + format.blockwide : Math.min(rStart + format.blockwide, 1 + pages);\n          }\n        }\n\n        while (i--) {\n          tmp = 0; // default everything is visible\n\n          node = format.fstack[i];\n\n          switch (node.ftype) {\n            case \"left\":\n              tmp = node.fpos < rStart;\n              break;\n\n            case \"right\":\n              tmp = rStop <= pages - format.rights + node.fpos;\n              break;\n\n            case \"first\":\n              tmp = format.current < page;\n              break;\n\n            case \"last\":\n              tmp = format.blockwide < format.current + pages - page;\n              break;\n\n            case \"prev\":\n              tmp = 1 < page;\n              break;\n\n            case \"next\":\n              tmp = page < pages;\n              break;\n          }\n\n          groups |= tmp << node.fgroup; // group visible?\n        }\n\n        data = {\n          \"number\": number,\n          // number of elements\n          \"lapping\": lapping,\n          // overlapping\n          \"pages\": pages,\n          // number of pages\n          \"perpage\": opts[\"perpage\"],\n          // number of elements per page\n          \"page\": page,\n          // current page\n          \"slice\": [// two element array with bounds of the current page selection\n          (tmp = page * (opts[\"perpage\"] - lapping) + lapping) - opts[\"perpage\"], // Lower bound\n          Math.min(tmp, number) // Upper bound\n          ]\n        };\n        buffer = \"\";\n\n        function buffer_append(opts, data, type) {\n          type = \"\" + opts[\"onFormat\"].call(data, type);\n\n          if (data[\"value\"]) {\n            buffer += type.replace(/<a/i, '<a data-page=\"' + data[\"value\"] + '\"');\n          } else {\n            buffer += type;\n          }\n        }\n\n        while (++i < count) {\n          node = format.fstack[i];\n          tmp = groups >> node.fgroup & 1;\n\n          switch (node.ftype) {\n            case \"block\":\n              for (; rStart < rStop; ++rStart) {\n                data[\"value\"] = rStart;\n                data[\"pos\"] = 1 + format.blockwide - rStop + rStart;\n                data[\"active\"] = rStart <= pages || number < 0; // true if infinity series and rStart <= pages\n\n                data[\"first\"] = 1 === rStart; // check if it is the first page\n\n                data[\"last\"] = rStart === pages && 0 < number; // false if infinity series or rStart != pages\n\n                buffer_append(opts, data, node.ftype);\n              }\n\n              continue;\n\n            case \"left\":\n              data[\"value\"] = node.fpos;\n              data[\"active\"] = node.fpos < rStart; // Don't take group-visibility into account!\n\n              break;\n\n            case \"right\":\n              data[\"value\"] = pages - format.rights + node.fpos;\n              data[\"active\"] = rStop <= data[\"value\"]; // Don't take group-visibility into account!\n\n              break;\n\n            case \"prev\":\n            case \"next\":\n              var p_ = 0;\n\n              if (opts[\"stepwidth\"] === 0) {\n                if (node.ftype === \"next\") {\n                  if (page <= format.current) {\n                    p_ = format.current + format.blockwide;\n                  } else {\n                    p_ = page + format.blockwide;\n                  }\n                } else {\n                  p_ = page - format.blockwide;\n                }\n              } else {\n                p_ = node.ftype === \"next\" ? page + opts[\"stepwidth\"] : page - opts[\"stepwidth\"];\n              }\n\n              if (opts[\"circular\"]) {\n                data[\"active\"] = 1;\n                data[\"value\"] = 1 + (pages + p_ - 1) % pages;\n              } else if (node.ftype === \"next\" && number < 0) {\n                // if type=next and infinity navigation\n                data[\"active\"] = 1;\n                data[\"value\"] = p_;\n              } else {\n                data[\"value\"] = Math.max(1, Math.min(p_, pages));\n                data[\"active\"] = tmp && 1 < page && page < pages;\n              }\n\n              break;\n\n            case \"first\":\n              data[\"value\"] = 1;\n              data[\"active\"] = tmp && 1 < page;\n              break;\n\n            case \"last\":\n              if (number < 0) {\n                data[\"active\"] = 1;\n                data[\"value\"] = 1 + page;\n              } else {\n                data[\"value\"] = pages;\n                data[\"active\"] = tmp && page < pages;\n              }\n\n              break;\n\n            case \"leap\":\n            case \"fill\":\n              data[\"pos\"] = node.fpos;\n              data[\"active\"] = tmp; // tmp is true by default and changes only for group behaviour\n\n              buffer_append(opts, data, node.ftype);\n              continue;\n          }\n\n          data[\"pos\"] = node.fpos;\n          data[\"last\"] =\n          /* void */\n          data[\"first\"] = undefined;\n          buffer_append(opts, data, node.ftype);\n        }\n\n        if (self.length) {\n          $(\"a\", self[\"html\"](buffer)).click(opts['onClick'] || function (ev) {\n            ev[\"preventDefault\"]();\n            var obj = this;\n\n            do {\n              if ('a' === obj[\"nodeName\"].toLowerCase()) {\n                break;\n              }\n            } while (obj = obj[\"parentNode\"]);\n\n            Paging[\"setPage\"]($(obj).data(\"page\"));\n\n            if (Paging.locate) {\n              window.location = obj[\"href\"];\n            }\n          });\n          Paging.locate = opts[\"onSelect\"].call({\n            \"number\": number,\n            \"lapping\": lapping,\n            \"pages\": pages,\n            \"slice\": data[\"slice\"]\n          }, page, self);\n        }\n\n        return Paging;\n      }\n    };\n    return Paging[\"setNumber\"](number)[\"setOptions\"](opts)[\"setPage\"]();\n  };\n})(jQuery, this);","import $ from 'jquery';\n\nrequire('./jquery.paging');\n\nrequire('./pagination.scss');\n\n$(() => {\n  $('body').find('.js-pagination .js-pagination__wrapper').each(function () {\n    const $pagination = $(this);\n    const currentPage = $pagination.attr('data-page');\n    const perpage = $pagination.attr('data-perpage');\n    const countElements = $pagination.attr('data-elements');\n    const $paginationOutput = $pagination.closest('.js-pagination').find('.js-pagination__output');\n    let countElementsOutput = '';\n\n    if (countElements >= 100) {\n      countElementsOutput = '100+';\n    } else {\n      countElementsOutput = countElements;\n    }\n\n    $pagination.paging(countElements, {\n      format: '< [ (q-) ncn (-p) ] >',\n      perpage,\n      lapping: 0,\n      page: currentPage,\n\n      onSelect() {\n        let startCountElements = 0;\n        const [startEl, endEl] = this.slice;\n\n        if (startEl) {\n          startCountElements = startEl;\n        } else {\n          startCountElements = 1;\n        }\n\n        $paginationOutput.text(`${startCountElements} - ${endEl} из ${countElementsOutput} `);\n      },\n\n      onFormat(type) {\n        switch (type) {\n          case 'block':\n            if (!this.active) {\n              return `<span class=\"pagination__number\">${this.value}</span>`;\n            }\n\n            if (this.value !== this.page) {\n              return `<a href=\"#\" class=\"pagination__number\">${this.value}</a>`;\n            }\n\n            return `<span class=\"pagination__number pagination__number_current\">${this.value}</span>`;\n\n          case 'next':\n            if (this.active || this.page === 1) {\n              return '<a href=\"#\" class=\"pagination__next\">></a>';\n            }\n\n            return '';\n\n          case 'prev':\n            if (this.active || this.page === this.pages) {\n              return '<a href=\"#\" class=\"pagination__prev\"><</a>';\n            }\n\n            return '';\n\n          case 'first':\n            if (this.active) {\n              return '';\n            }\n\n            return '';\n\n          case 'last':\n            if (this.active) {\n              return '';\n            }\n\n            return '';\n\n          case 'leap':\n            if (this.active) {\n              return '';\n            }\n\n            return '';\n\n          case 'fill':\n            if (this.active) {\n              return '<span class=\"pagination__number\">...</span>';\n            }\n\n            return '';\n\n          case 'right':\n            if (this.active) {\n              return `<a href=\"#\" class=\"pagination__number\">${this.value}</a>`;\n            }\n\n            return '';\n\n          case 'left':\n            if (this.active) {\n              return `<a href=\"#\" class=\"pagination__number\">${this.value}</a>`;\n            }\n\n            return '';\n\n          default:\n            return this;\n        }\n      }\n\n    });\n  });\n});","// extracted by mini-css-extract-plugin","import $ from 'jquery';\n\nrequire('./rate-btn.scss');\n\n$(() => {\n  function handlerClickRateBtn(event) {\n    event.preventDefault();\n    const $btn = $(event.currentTarget);\n    const $rateBtn = $btn.closest('.js-rate-btn');\n    const $inputRate = $rateBtn.find('.js-rate-btn__input');\n    const starRate = $btn.attr('data-number-star');\n    const currentRate = $inputRate.val();\n\n    if (starRate === '1' && currentRate === '1') {\n      $inputRate.val(0);\n    } else {\n      $inputRate.val(starRate);\n    }\n  }\n\n  $('body').on('click', '.js-rate-btn .js-rate-btn__star-item', handlerClickRateBtn);\n});","// extracted by mini-css-extract-plugin","import $ from 'jquery';\nimport 'webpack-jquery-ui/slider';\nimport 'jquery-ui-touch-punch';\n\nrequire('./slider-range.scss');\n\n$(document).ready(() => {\n  $('body').find('.js-slider-range').each(function () {\n    const $currentSlider = $(this);\n    const $sliderWrapper = $currentSlider.find('.js-slider-range__slider');\n    const $currentInput = $currentSlider.find('.js-slider-range__input-result');\n    const $inputMinVal = $currentSlider.find('.js-slider-range__min-val');\n    const $inputMaxVal = $currentSlider.find('.js-slider-range__max-val');\n    const valMin = parseInt($sliderWrapper.attr('data-min'), 10);\n    const valMax = parseInt($sliderWrapper.attr('data-max'), 10);\n    const val1 = parseInt($sliderWrapper.attr('data-val1'), 10);\n    const val2 = parseInt($sliderWrapper.attr('data-val2'), 10);\n\n    function getFormatValues(values) {\n      if (!values.length) {\n        return;\n      }\n\n      let resultInputVal = '';\n      resultInputVal += values[0] + $.RUBLE;\n      resultInputVal += ' - ';\n      resultInputVal += values[1] + $.RUBLE;\n      $currentInput.val(resultInputVal);\n    }\n\n    function writeValuesToInputs(values) {\n      if ($inputMinVal.length && values[0]) {\n        $inputMinVal.val(values[0]);\n      }\n\n      if ($inputMaxVal.length && values[1]) {\n        $inputMaxVal.val(values[1]);\n      }\n    }\n\n    $sliderWrapper.slider({\n      range: true,\n      min: valMin,\n      max: valMax,\n      values: [val1, val2],\n      change: (event, ui) => {\n        writeValuesToInputs(ui.values);\n      },\n      slide: (event, ui) => {\n        getFormatValues(ui.values);\n      }\n    });\n    getFormatValues($sliderWrapper.slider('values'));\n  });\n});","// extracted by mini-css-extract-plugin"],"sourceRoot":""}