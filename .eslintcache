[{"/Users/mak/Documents/hotel-toxin/src/components/air-datepicker/air-datepicker.js":"1","/Users/mak/Documents/hotel-toxin/src/components/card-product/card-product.js":"2","/Users/mak/Documents/hotel-toxin/src/components/chart/chart.js":"3","/Users/mak/Documents/hotel-toxin/src/components/collapse/collapse.js":"4","/Users/mak/Documents/hotel-toxin/src/components/curtain/curtain.js":"5","/Users/mak/Documents/hotel-toxin/src/components/dropdown/dropdown.js":"6","/Users/mak/Documents/hotel-toxin/src/components/filter-products/filter-products.js":"7","/Users/mak/Documents/hotel-toxin/src/components/footer/footer.js":"8","/Users/mak/Documents/hotel-toxin/src/components/header/header.js":"9","/Users/mak/Documents/hotel-toxin/src/components/input/input.js":"10","/Users/mak/Documents/hotel-toxin/src/components/like-btn/like-btn.js":"11","/Users/mak/Documents/hotel-toxin/src/components/pagination/jquery.paging.js":"12","/Users/mak/Documents/hotel-toxin/src/components/pagination/pagination.js":"13","/Users/mak/Documents/hotel-toxin/src/components/rate-btn/rate-btn.js":"14","/Users/mak/Documents/hotel-toxin/src/components/scrollbar/scrollbar.js":"15","/Users/mak/Documents/hotel-toxin/src/components/slider-range/slider-range.js":"16","/Users/mak/Documents/hotel-toxin/src/entry.js":"17","/Users/mak/Documents/hotel-toxin/src/pages/guide/guide.js":"18","/Users/mak/Documents/hotel-toxin/src/pages/index/index.js":"19","/Users/mak/Documents/hotel-toxin/src/pages/product/product.js":"20","/Users/mak/Documents/hotel-toxin/src/pages/products/products.js":"21"},{"size":1434,"mtime":1626250486840,"results":"22","hashOfConfig":"23"},{"size":249,"mtime":1626253244125,"results":"24","hashOfConfig":"23"},{"size":2278,"mtime":1626253363383,"results":"25","hashOfConfig":"23"},{"size":730,"mtime":1626248594216,"results":"26","hashOfConfig":"23"},{"size":1107,"mtime":1626253926068,"results":"27","hashOfConfig":"23"},{"size":4618,"mtime":1626252724586,"results":"28","hashOfConfig":"23"},{"size":1204,"mtime":1626248619028,"results":"29","hashOfConfig":"23"},{"size":0,"mtime":1594819946000,"results":"30","hashOfConfig":"23"},{"size":0,"mtime":1594819946000,"results":"31","hashOfConfig":"23"},{"size":315,"mtime":1626248645226,"results":"32","hashOfConfig":"23"},{"size":136,"mtime":1626248655384,"results":"33","hashOfConfig":"23"},{"size":20682,"mtime":1594819946000,"results":"34","hashOfConfig":"23"},{"size":3016,"mtime":1626248666054,"results":"35","hashOfConfig":"23"},{"size":857,"mtime":1626248677215,"results":"36","hashOfConfig":"23"},{"size":225,"mtime":1626248685782,"results":"37","hashOfConfig":"23"},{"size":970,"mtime":1626248694084,"results":"38","hashOfConfig":"23"},{"size":1420,"mtime":1626233521953,"results":"39","hashOfConfig":"23"},{"size":0,"mtime":1594819946000,"results":"40","hashOfConfig":"23"},{"size":0,"mtime":1594819946000,"results":"41","hashOfConfig":"23"},{"size":242,"mtime":1626248812233,"results":"42","hashOfConfig":"23"},{"size":590,"mtime":1626248818443,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8y55i7",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":13,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"/Users/mak/Documents/hotel-toxin/src/components/air-datepicker/air-datepicker.js",[],"/Users/mak/Documents/hotel-toxin/src/components/card-product/card-product.js",[],"/Users/mak/Documents/hotel-toxin/src/components/chart/chart.js",[],"/Users/mak/Documents/hotel-toxin/src/components/collapse/collapse.js",[],"/Users/mak/Documents/hotel-toxin/src/components/curtain/curtain.js",[],"/Users/mak/Documents/hotel-toxin/src/components/dropdown/dropdown.js",["94","95"],"import $ from 'jquery';\n\n$(document).ready(function(){\n\n  checkItemCount();\n\n\n  // закрытие dropdown по клику вне этого dropdown\n  $('body').on('click', '*', function (event) {\n    if( !$(event.target).closest('.js-dropdown').length && !$(event.target).hasClass('.js-dropdown') ) {\n      $('.js-dropdown').removeClass('dropdown_active');\n    }\n  });\n\n\n  $('body').on('click', '.js-dropdown .js-dropdown__input-wrapper', function(e){\n    e.preventDefault();\n    var $parent = $(this).closest('.js-dropdown');\n    var dropdown_group = $parent.attr('data-group');\n    \n    if( dropdown_group != '' && dropdown_group !== 'undefined' ){\n      var selector = '.js-dropdown';\n      \n      $('body').find(selector + '[data-group=\"' + dropdown_group + '\"]').each(function(){\n        if( $(selector).index($(this)) == $(selector).index($parent) ){\n          $parent.toggleClass('dropdown_active');\n        } else{\n          $(this).removeClass('dropdown_active');\n        }\n      });\n    } else{\n      $parent.toggleClass('dropdown_active');\n    }\n  });\n\n\n  $('body').on('click', '.js-dropdown .js-dropdown__btn-less', function(e){\n    e.preventDefault();\n    var $btn = $(this);\n    var $parent = $btn.closest('.js-dropdown__counter');\n    var $input = $parent.find('.js-dropdown__counter-input');\n    var countItem = $input.val();\n    if( countItem != 0 ){\n      countItem--;\n      $input.val(countItem);\n    }\n    checkItemCount($parent, countItem);\n  });\n\n\n  $('body').on('click', '.js-dropdown .js-dropdown__btn-more', function(e){\n    e.preventDefault();\n    var $btn = $(this);\n    var $parent = $btn.closest('.js-dropdown__counter');\n    var $input = $parent.find('.js-dropdown__counter-input');\n    var countItem = $input.val();\n\n    countItem++;\n    $input.val(countItem);\n\n    checkItemCount($parent, countItem);\n  });\n\n\n  $('body').on('click', '.js-dropdown:not(.dropdown_simple) .js-dropdown__btn-reset .js-button', function(){\n    var $dropdown = $(this).closest('.js-dropdown');\n    $dropdown.find('.js-dropdown__counter-input').val(0);\n    checkItemCount();\n\n    var text = $dropdown.attr('data-default-text') ? $dropdown.attr('data-default-text') : '';\n    $dropdown.find('.js-dropdown__input-wrapper .js-input__field').val(text);\n\n    $(this).closest('.js-dropdown__btn-reset').addClass('dropdown_hidden');\n  });\n\n\n  $('body').on('click', '.js-dropdown:not(.dropdown_simple) .js-dropdown__btn-submit .js-button', function(){\n    var $dropdown = $(this).closest('.js-dropdown');\n    var summ = 0;\n    $dropdown.find('.js-dropdown__counter-input').each(function(){\n      summ += parseInt( $(this).val() );\n    });\n    if( summ !== 0 ){\n      $dropdown.find('.js-dropdown__btn-reset').removeClass('dropdown_hidden');\n    } else{\n      $dropdown.find('.js-dropdown__btn-reset').addClass('dropdown_hidden');\n    }\n\n    let text = '';\n\n    if( summ === 1 ){\n      text = $dropdown.attr('data-text-one') ? $dropdown.attr('data-text-one') : '';\n    } else{\n      text = $dropdown.attr('data-text-many') ? $dropdown.attr('data-text-many') : '';\n    }\n    $dropdown.find('.js-dropdown__input-wrapper .js-input__field').val(summ + ' ' + text);\n\n    checkItemCount();\n  });\n\n\n  $('body').on('click', '.js-dropdown.dropdown_simple .js-dropdown__btn-more, .js-dropdown.dropdown_simple .js-dropdown__btn-less', function(){\n    var $dropdown = $(this).closest('.js-dropdown');\n    var result = '';\n\n    $dropdown.find('.js-dropdown__counter').each(function(){\n      var val_counter = $(this).find('.js-dropdown__counter-input').val();\n      if( val_counter != 0 ){\n        result += $(this).find('.js-dropdown__counter-input').val();\n        result += ' ';\n        result += $(this).find('.js-dropdown__counter-label').text();\n        result += ', ';\n      }\n    });\n\n    $dropdown.find('.js-dropdown__input-wrapper .js-input__field').val(result);\n  });\n\n\n  function checkItemCount($counter, count){\n    if( arguments.length > 0 ){\n      if( count == 0 ){\n        $counter.find('.js-dropdown__btn-less').addClass('dropdown_disabled-btn');\n      } else{\n        $counter.find('.js-dropdown__btn-less').removeClass('dropdown_disabled-btn');\n      }\n\n    }\n    else{\n      $('body').find('.js-dropdown__btn-less').each(function(){\n        var $btn = $(this);\n        var $parent = $btn.closest('.js-dropdown__counter');\n        var $input = $parent.find('.js-dropdown__counter-input');\n        var countItem = $input.val();\n        if( countItem == 0 ){\n          $btn.addClass('dropdown_disabled-btn');\n        } else{\n          $btn.removeClass('dropdown_disabled-btn');\n        }\n      });\n    }\n  }\n});","/Users/mak/Documents/hotel-toxin/src/components/filter-products/filter-products.js",["96","97","98"],"import $ from 'jquery';\n\n$(function(){\n  $('body').on('click', '.filter-products_hide-filter', function(event){\n    event.preventDefault();\n    $(this).closest('.filter-products').removeClass('filter-products_mob-show');\n\n    var scrollTop_body = $('body').attr('data-last-scrolltop') ? $('body').attr('data-last-scrolltop') : 0;\n\n    $('.page__content-wrapper, body').css({\n      top: '',\n      position: '',\n    });\n    $('body').css({\n      overflow: '',\n    });\n    $('html, body').scrollTop(scrollTop_body);\n    $('body').attr('data-last-scrolltop', 0);\n  });\n\n\n  function update_filter_products(){\n    // if( $(window).width() < $.BREAKPOINTS.md ){\n    if( window.matchMedia('(max-width: ' + $.BREAKPOINTS.md + 'px)').matches ){\n      $('body').prepend( $('.filter-products.filter-products_mob-md') );\n    } else{\n      $('.products__left-column').append( $('.filter-products.filter-products_mob-md') );\n    }\n    return false;\n  }\n\n  update_filter_products();\n\n\n  var timer_filter = null;\n\n  $(window).resize(function(){\n    if(timer_filter !== null) {\n      clearTimeout(timer_filter);        \n    }\n    timer_filter = setTimeout(function() {\n      update_filter_products();\n    }, 50);\n  });\n});","/Users/mak/Documents/hotel-toxin/src/components/footer/footer.js",[],"/Users/mak/Documents/hotel-toxin/src/components/header/header.js",[],"/Users/mak/Documents/hotel-toxin/src/components/input/input.js",[],"/Users/mak/Documents/hotel-toxin/src/components/like-btn/like-btn.js",[],"/Users/mak/Documents/hotel-toxin/src/components/pagination/jquery.paging.js",["99","100","101","102","103","104","105","106","107","108","109","110","111"],"/**\n * @license jQuery paging plugin v1.3.1 23/06/2014\n * http://www.xarg.org/2011/09/jquery-pagination-revised/\n *\n * Copyright (c) 2011, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n(function($, window, undefined) {\n\n\n    $[\"fn\"][\"paging\"] = function(number, opts) {\n\n        var self = this,\n        Paging = {\n\n            \"setOptions\": function(opts) {\n\n                var parseFormat = function(format) {\n\n                    var gndx = 0, group = 0, num = 1, res = {\n                        fstack:    [], // format stack\n                        asterisk:  0, // asterisk?\n                        inactive:  0, // fill empty pages with inactives up to w?\n                        blockwide: 5, // width of number block\n                        current:   3, // position of current element in number block\n                        rights:    0, // num of rights\n                        lefts:     0 // num of lefts\n                    }, tok, pattern = /[*<>pq\\[\\]().-]|[nc]+!?/g;\n\n                    var known = {\n                        \"[\": \"first\",\n                        \"]\": \"last\",\n                        \"<\": \"prev\",\n                        \">\": \"next\",\n                        \"q\": \"left\",\n                        \"p\": \"right\",\n                        \"-\": \"fill\",\n                        \".\": \"leap\"\n                    }, count = {};\n\n                    while ((tok = pattern[\"exec\"](format))) {\n\n                        tok = \"\" + (tok);\n\n                        if (undefined === known[tok]) {\n\n                            if (\"(\" === tok) {\n                                group = ++gndx;\n                            } else if (\")\" === tok) {\n                                group = 0;\n                            } else if (num) {\n\n                                if (\"*\" === tok) {\n                                    res.asterisk = 1;\n                                    res.inactive = 0;\n                                } else {\n                                    // number block is the only thing left here\n                                    res.asterisk = 0;\n                                    res.inactive = \"!\" === tok.charAt(tok.length - 1);\n                                    res.blockwide = tok[\"length\"] - res.inactive;\n                                    if (!(res.current = 1 + tok.indexOf(\"c\"))) {\n                                        res.current = (1 + res.blockwide) >> 1;\n                                    }\n                                }\n\n                                res.fstack.push({\n                                    ftype: \"block\", // type\n                                    fgroup: 0,      // group\n                                    fpos: 0         // pos\n                                });\n                                num = 0;\n                            }\n\n                        } else {\n\n                            res.fstack.push({\n                                ftype: known[tok], // type\n                                fgroup: group,     // group\n                                fpos: undefined === count[tok] ? count[tok] = 1 : ++count[tok] // pos\n                            });\n\n                            if (\"q\" === tok)\n                                ++res.lefts;\n                            else if (\"p\" === tok)\n                                ++res.rights;\n                        }\n                    }\n                    return res;\n                };\n\n                Paging.opts = $.extend(Paging.opts || {\n\n                    \"lapping\": 0, // number of elements overlap\n\n                    \"perpage\": 10, // number of elements per page\n\n                    \"page\": 1, // current page\n                    \n                    \"stepwidth\": 1, // stepwidth for prev/next -> if = 0 then blockwise steps\n\n                    \"refresh\": {\n                        \"interval\": 10,\n                        \"url\": null\n                    }, // refresh callback information\n\n                    \"format\": \"\", // visual format string\n\n                    \"lock\": false, // set to true, if you want to disable the pagination for a while. \n\n                    \"circular\": false, // set to true if you want the next/prev buttons go circular\n\n                    \"onClick\": null, // Alternative click handler to bypass onSelect mechanism\n\n                    \"onFormat\": function(type) {\t// callback for every format element\n\n                    /** EXAMPLE **\n\n                        switch (type) {\n\n                            case 'block':\n\n                                if (!this.active)\n                                    return '<span class=\"disabled\">' + this.value + '</span>';\n                                else if (this.value != this.page)\n                                    return '<em><a href=\"#' + this.value + '\">' + this.value + '</a></em>';\n                                return '<span class=\"current\">' + this.value + '</span>';\n\n                            case 'right':\n                            case 'left':\n\n                                if (!this.active) {\n                                    return \"\";\n                                }\n                                return '<a href=\"#' + this.value + '\">' + this.value + '</a>';\n\n                            case 'next':\n\n                                if (this.active) {\n                                    return '<a href=\"#' + this.value + '\" class=\"next\">Next &raquo;</a>';\n                                }\n                                return '<span class=\"disabled\">Next &raquo;</span>';\n\n                            case 'prev':\n\n                                if (this.active) {\n                                    return '<a href=\"#' + this.value + '\" class=\"prev\">&laquo; Previous</a>';\n                                }\n                                return '<span class=\"disabled\">&laquo; Previous</span>';\n\n                            case 'first':\n\n                                if (this.active) {\n                                    return '<a href=\"#' + this.value + '\" class=\"first\">|&lt;</a>';\n                                }\n                                return '<span class=\"disabled\">|&lt;</span>';\n\n                            case 'last':\n\n                                if (this.active) {\n                                    return '<a href=\"#' + this.value + '\" class=\"prev\">&gt;|</a>';\n                                }\n                                return '<span class=\"disabled\">&gt;|</span>';\n\n                            case 'fill':\n                                if (this.active) {\n                                    return \"...\";\n                                }\n                        }\n                        return \"\"; // return nothing for missing branches\n\n                        **/\n                    },\n                    \"onSelect\": function(page) {\t// callback for page selection\n\n                        /** EXAMPLE SLICE **\n\n                        var data = this.slice;\n\n                        content.slice(prev[0], prev[1]).css('display', 'none');\n                        content.slice(data[0], data[1]).css('display', 'block');\n\n                        prev = data;\n\n                        **/\n\n\n                        /** EXAMPLE AJAX **\n\n                        $.ajax({\n                            \"url\": '/data.php?start=' + this.slice[0] + '&end=' + this.slice[1] + '&page=' + page,\n                            \"success\": function(data) {\n                                // content replace\n                            }\n                        });\n\n                        **/\n\n                        // Return code indicates if the link of the clicked format element should be followed (otherwise only the click-event is used)\n                        return true;\n                    },\n                    \"onRefresh\": function(json) { // callback for new data of refresh api\n\n                        /** EXAMPLE **\n                        if (json.number) {\n                            Paging.setNumber(json.number);\n                        }\n\n                        if (json.options) {\n                            Paging.setOptions(json.options);\n                        }\n\n                        Paging.setPage(); // Call with empty params to reload the paginator\n                        **/\n                    }\n                }, opts || {});\n\n                Paging.opts[\"lapping\"]|= 0;\n                Paging.opts[\"perpage\"]|= 0;\n                if (Paging.opts[\"page\"] !== null)\n                    Paging.opts[\"page\"]|= 0;\n\n                // If the number of elements per page is less then 1, set it to default\n                if (Paging.opts[\"perpage\"] < 1) {\n                    Paging.opts[\"perpage\"] = 10;\n                }\n\n                if (Paging.interval)\n                    window.clearInterval(Paging.interval);\n\n                if (Paging.opts[\"refresh\"][\"url\"]) {\n\n                    Paging.interval = window.setInterval(function() {\n\n                        $[\"ajax\"]({\n                            \"url\": Paging.opts[\"refresh\"][\"url\"],\n                            \"success\": function(data) {\n\n                                if (typeof(data) === \"string\") {\n\n                                    try {\n                                        data = $[\"parseJSON\"](data);\n                                    } catch (o) {\n                                        return;\n                                    }\n                                }\n                                Paging.opts[\"onRefresh\"](data);\n                            }\n                        });\n\n                    }, 1000 * Paging.opts[\"refresh\"][\"interval\"]);\n                }\n\n                Paging.format = parseFormat(Paging.opts[\"format\"]);\n                return Paging;\n            },\n\n            \"setNumber\": function(number) {\n                Paging.number = (undefined === number || number < 0) ? -1 : number;\n                return Paging;\n            },\n\n            \"setPage\": function(page) {\n\n                if (Paging.opts[\"lock\"]) {\n                    Paging.opts[\"onSelect\"](0, self);\n                    return Paging;\n                }\n\n                if (undefined === page) {\n\n                    page = Paging.opts[\"page\"];\n\n                    if (null === page) {\n                        return Paging;\n                    }\n\n                } else if (Paging.opts[\"page\"] == page) { // Necessary to be ==, not ===\n                    return Paging;\n                }\n\n                Paging.opts[\"page\"] = (page|= 0);\n\n                var number = Paging.number;\n                var opts = Paging.opts;\n\n                var rStart, rStop;\n\n                var pages, buffer;\n\n                var groups = 1, format = Paging.format;\n\n                var data, tmp, node, lapping;\n\n                var count = format.fstack[\"length\"], i = count;\n\n\n                // If the lapping is greater than perpage, reduce it to perpage - 1 to avoid endless loops\n                if (opts[\"perpage\"] <= opts[\"lapping\"]) {\n                    opts[\"lapping\"] = opts[\"perpage\"] - 1;\n                }\n\n                lapping = number <= opts[\"lapping\"] ? 0 : opts[\"lapping\"] | 0;\n\n\n                // If the number is negative, the value doesn\"t matter, we loop endlessly with a constant width\n                if (number < 0) {\n\n                    number = -1;\n                    pages = -1;\n\n                    rStart = Math.max(1, page - format.current + 1 - lapping);\n                    rStop  = rStart + format.blockwide;\n\n                } else {\n\n                    /* Calculate the number of pages\n                     * http://www.xarg.org/2016/10/derivation-of-pagination-calculation/\n                     *\n                     */\n                    pages = 1 + Math.ceil((number - opts[\"perpage\"]) / (opts[\"perpage\"] - lapping));\n\n                    // If current page is negative, start at the end and\n                    // Set the current page into a valid range, includes 0, which is set to 1\n                    page = Math.max(1, Math.min(page < 0 ? 1 + pages + page : page, pages));\n\n                    // Do we need to print all numbers?\n                    if (format.asterisk) {\n                        rStart = 1;\n                        rStop  = 1 + pages;\n\n                        // Disable :first and :last for asterisk mode as we see all buttons\n                        format.current   = page;\n                        format.blockwide = pages;\n\n                    } else {\n\n                        // If no, start at the best position and stop at max width or at num of pages\n                        rStart = Math.max(1, Math.min(page - format.current, pages - format.blockwide) + 1);\n                        rStop = format.inactive ? rStart + format.blockwide : Math.min(rStart + format.blockwide, 1 + pages);\n                    }\n                }\n\n                while (i--) {\n\n                    tmp = 0; // default everything is visible\n                    node = format.fstack[i];\n\n                    switch (node.ftype) {\n\n                        case \"left\":\n                            tmp = (node.fpos < rStart);\n                            break;\n                        case \"right\":\n                            tmp = (rStop <= pages - format.rights + node.fpos);\n                            break;\n\n                        case \"first\":\n                            tmp = (format.current < page);\n                            break;\n                        case \"last\":\n                            tmp = (format.blockwide < format.current + pages - page);\n                            break;\n\n                        case \"prev\":\n                            tmp = (1 < page);\n                            break;\n                        case \"next\":\n                            tmp = (page < pages);\n                            break;\n                    }\n                    groups|= tmp << node.fgroup; // group visible?\n                }\n\n                data = {\n                    \"number\":   number, // number of elements\n                    \"lapping\":  lapping, // overlapping\n                    \"pages\":    pages, // number of pages\n                    \"perpage\":  opts[\"perpage\"], // number of elements per page\n                    \"page\":     page, // current page\n                    \"slice\": [ // two element array with bounds of the current page selection\n                        (tmp = page * (opts[\"perpage\"] - lapping) + lapping) - opts[\"perpage\"], // Lower bound\n                        Math.min(tmp, number) // Upper bound\n                    ]\n                };\n\n                buffer = \"\";\n\n                function buffer_append(opts, data, type) {\n\n                    type = \"\" + (opts[\"onFormat\"].call(data, type));\n\n                    if (data[\"value\"]) {\n                        buffer += type.replace(/<a/i, '<a data-page=\"' + data[\"value\"] + '\"');\n                    } else {\n                        buffer += type;\n                    }\n                }\n\n                while (++i < count) {\n\n                    node = format.fstack[i];\n\n                    tmp = (groups >> node.fgroup & 1);\n\n                    switch (node.ftype) {\n                        case \"block\":\n                            for (; rStart < rStop; ++rStart) {\n\n                                data[\"value\"]  = rStart;\n                                data[\"pos\"]    = 1 + format.blockwide - rStop + rStart;\n\n                                data[\"active\"] = rStart <= pages || number < 0;     // true if infinity series and rStart <= pages\n                                data[\"first\"]  = 1 === rStart;                      // check if it is the first page\n                                data[\"last\"]   = rStart === pages && 0 < number;    // false if infinity series or rStart != pages\n\n                                buffer_append(opts, data, node.ftype);\n                            }\n                            continue;\n\n                        case \"left\":\n                            data[\"value\"]  = node.fpos;\n                            data[\"active\"] = node.fpos < rStart; // Don't take group-visibility into account!\n                            break;\n\n                        case \"right\":\n                            data[\"value\"]  = pages - format.rights + node.fpos;\n                            data[\"active\"] = rStop <= data[\"value\"]; // Don't take group-visibility into account!\n                            break;\n\n                        case \"prev\":\n                        case \"next\":\n                          \n                            var p_ = 0;\n                            \n                            if (opts[\"stepwidth\"] === 0) {\n                              \n                              if (node.ftype === \"next\") {\n\n                                if (page <= format.current) {\n                                  p_ = format.current + format.blockwide;\n                                } else {\n                                  p_ = page + format.blockwide;\n                                }\n                                \n                              } else {\n                                p_ = page - format.blockwide;\n                              }\n                              \n                            } else {\n                              p_ = node.ftype ===\"next\" ? page + opts[\"stepwidth\"] : page - opts[\"stepwidth\"];\n                            }\n                            \n                            if (opts[\"circular\"]) {\n                                data[\"active\"] = 1;\n                                data[\"value\"]  = 1 + (pages + p_ - 1) % pages;\n                            } else if (node.ftype === \"next\" && number < 0) { // if type=next and infinity navigation\n                                data[\"active\"] = 1;\n                                data[\"value\"]  = p_;\n                            } else {\n                                data[\"value\"]  = Math.max(1, Math.min(p_, pages));\n                                data[\"active\"] = tmp && 1 < page && page < pages;\n                            }\n                            break;\n\n                        case \"first\":\n                            data[\"value\"]  = 1;\n                            data[\"active\"] = tmp && 1 < page;\n                            break;\n\n                        case \"last\":\n                            if (number < 0) {\n                                data[\"active\"]  = 1;\n                                data[\"value\"]   = 1 + page;\n                            } else {\n                                data[\"value\"]   = pages;\n                                data[\"active\"]  = tmp && page < pages;\n                            }\n                            break;\n\n                        case \"leap\":\n                        case \"fill\":\n                            data[\"pos\"]    = node.fpos;\n                            data[\"active\"] = tmp; // tmp is true by default and changes only for group behaviour\n                            buffer_append(opts, data, node.ftype);\n                            continue;\n                    }\n\n                    data[\"pos\"]   = node.fpos;\n                    data[\"last\"]  = /* void */\n                    data[\"first\"] = undefined;\n\n                    buffer_append(opts, data, node.ftype);\n                }\n\n                if (self.length) {\n\n                    $(\"a\", self[\"html\"](buffer)).click(opts['onClick'] || function(ev) {\n                        ev[\"preventDefault\"]();\n\n                        var obj = this;\n\n                        do {\n\n                            if ('a' === obj[\"nodeName\"].toLowerCase()) {\n                                break;\n                            }\n\n                        } while ((obj = obj[\"parentNode\"]));\n\n                        Paging[\"setPage\"]($(obj).data(\"page\"));\n\n                        if (Paging.locate) {\n                            window.location = obj[\"href\"];\n                        }\n                    });\n\n                    Paging.locate = opts[\"onSelect\"].call({\n                        \"number\":   number,\n                        \"lapping\":  lapping,\n                        \"pages\":    pages,\n                        \"slice\":    data[\"slice\"]\n                    }, page, self);\n                }\n                return Paging;\n            }\n        };\n\n        return Paging\n                [\"setNumber\"](number)\n                [\"setOptions\"](opts)\n                [\"setPage\"]();\n    };\n\n}(jQuery, this));\n","/Users/mak/Documents/hotel-toxin/src/components/pagination/pagination.js",["112","113"],"import $ from 'jquery';\n\n$(document).ready(function(){\n  $('body').find('.pagination .pagination__wrapper').each(function(){\n    let $pagination = $(this);\n    let current_page = $pagination.attr('data-page');\n    let perpage = $pagination.attr('data-perpage');\n    let count_elements = $pagination.attr('data-elements');\n    let $pagination_output = $pagination.closest('.pagination').find('.pagination__output');\n    \n    let count_elements_output = '';\n    if( count_elements >= 100 )\n      count_elements_output = '100+';\n    else\n      count_elements_output = count_elements;\n\n    $pagination.paging(count_elements, { // elements navigatable\n      format: '< [ (q-) ncn (-p) ] >', // define how the navigation should look like and in which order onFormat() get's called\n      perpage: perpage, // show 10 elements per page\n      lapping: 0, // don't overlap pages for the moment\n      page: current_page, // start at page, can also be \"null\" or negative\n      onSelect: function (page) {\n        // console.log(this);\n        let start_count_elements = 0;\n        if( this.slice[0] ){\n          start_count_elements = this.slice[0];\n        } else{\n          start_count_elements = 1;\n        }\n        $pagination_output.text(start_count_elements + ' - ' + this.slice[1] + ' из ' + count_elements_output + ' ' );\n      },\n      onFormat: function (type) { // Gets called for each character of \"format\" and returns a HTML representation\n        switch (type) {\n          case 'block':\n            if(!this.active)\n              return '<span class=\"pagination__number\">' + this.value + '</span>';\n            else if (this.value != this.page)\n              return '<a href=\"#\" class=\"pagination__number\">' + this.value + '</a>';\n            return '<span class=\"pagination__number pagination__number_current\">' + this.value + '</span>';\n      \n          case 'next':\n            if(this.active || this.page == 1)\n              return '<a href=\"#\" class=\"pagination__next\">></a>';\n            return '';\n      \n          case 'prev':\n            if(this.active || this.page == this.pages)\n              return '<a href=\"#\" class=\"pagination__prev\"><</a>';\n            return '';\n      \n          case 'first':\n            if(this.active)\n              return '';\n            return '';\n      \n          case 'last':\n            if(this.active)\n              return '';\n            return '';\n      \n          case \"leap\":\n            if(this.active)\n              return '';\n            return '';\n      \n          case 'fill':\n            if(this.active)\n              return '<span class=\"pagination__number\">...</span>';\n            return '';\n  \n          case 'right':\n            if(this.active)\n              return '<a href=\"#\" class=\"pagination__number\">' + this.value + '</a>';\n            return '';\n  \n          case 'left':\n            if(this.active)\n              return '<a href=\"#\" class=\"pagination__number\">' + this.value + '</a>';\n            return '';\n        }\n      },\n    });\n  });\n});","/Users/mak/Documents/hotel-toxin/src/components/rate-btn/rate-btn.js",[],"/Users/mak/Documents/hotel-toxin/src/components/scrollbar/scrollbar.js",["114"],"import $ from 'jquery';\nimport SimpleBar from 'simplebar';\n\n$(function(){\n  $('.scrollbar', 'body').each(function(){\n    try {\n      new SimpleBar($(this)[0]);\n    } catch (error) {\n      console.debug(error);\n    }\n  });\n});","/Users/mak/Documents/hotel-toxin/src/components/slider-range/slider-range.js",[],"/Users/mak/Documents/hotel-toxin/src/entry.js",["115","116","117","118","119","120"],"import $ from 'jquery';\nimport jquery from 'jquery';\n\nimport 'normalize.css';\n\nimport './theme/global.scss';\n\n$.RUBLE = '₽';\n\n$.COLORS = {\n  dark:     '#1f2041',\n  dark75:   'rgba(#1f2041, .75)',\n  dark50:   'rgba(#1f2041, .50)',\n  dark30:   'rgba(#1f2041, .30)',\n  dark25:   'rgba(#1f2041, .25)',\n  dark10:   'rgba(#1f2041, .1)',\n  dark5:    'rgba(#1f2041, .05)',\n  white:    '#fff',\n  purple:   '#bc9cff',\n  green:    '#6fcf97',\n  black:    '#000',\n};\n\n$.GRADIENTS = {\n  gradient1: 'linear-gradient(180deg, ' + $.COLORS.purple + ' 0%, #8BA4F9 100%)',\n  gradient2: 'linear-gradient(180deg, ' + $.COLORS.green + ' 0%, #66D2EA 100%)',\n  gradient3: 'linear-gradient(180deg, #FFE39C 0%, #FFBA9C 100%)',\n  gradient4: 'linear-gradient(180deg, #919191 0%, #3D4975 100%)',\n};\n\n$.BREAKPOINTS = {\n  xxs: 320,\n  xs: 575,\n  sm: 767,\n  md: 991,\n  lg: 1199,\n  xl: 1440,\n};\n\nfunction requireAll(requireContext) {\n  return requireContext.keys().map(requireContext);\n}\n\nrequireAll(require.context('./components', true, /^\\.\\/(?!.*(?:__tests__)).*\\.(js?)$/));  // pattern to take each .js(x) files except of the ones with __tests__ directory https://regex101.com/r/J8NWTj/1\nrequireAll(require.context('./pages', true, /^\\.\\/(?!.*(?:__tests__)).*\\.(js?)$/));\n\nrequireAll(require.context('./components', true, /^\\.\\/(?!.*(?:__tests__)).*\\.(scss?)$/));\nrequireAll(require.context('./pages', true, /^\\.\\/(?!.*(?:__tests__)).*\\.(scss?)$/));","/Users/mak/Documents/hotel-toxin/src/pages/guide/guide.js",[],"/Users/mak/Documents/hotel-toxin/src/pages/index/index.js",[],"/Users/mak/Documents/hotel-toxin/src/pages/product/product.js",["121"],"import $ from 'jquery';\nimport 'owl.carousel';\n\n$(document).ready(function(){\n  $('.product__carousel', 'body').each(function(){\n    $(this).owlCarousel({\n      nav: true,\n      dots: true,\n      items: 1,\n      loop: false,\n    });\n  });\n});","/Users/mak/Documents/hotel-toxin/src/pages/products/products.js",["122","123","124"],"import $ from 'jquery';\n\n$(function(){\n  $('body').on('click', '.products_show-filter', function(event){\n    event.preventDefault();\n    \n    var scrollTop_body = $('html, body').scrollTop() || $(document).scrollTop() || $(window).scrollTop();\n    $('body').attr('data-last-scrolltop', scrollTop_body);\n    \n    $('.page__content-wrapper').css({\n      top: '-' + scrollTop_body + 'px',\n      position: 'fixed',\n    });\n    $('body').css({\n      top: '0px',\n      position: 'fixed',\n      overflow: 'hidden',\n    });\n\n    $('.filter-products').addClass('filter-products_mob-show');\n  });\n});",{"ruleId":"125","severity":2,"message":"126","line":9,"column":3,"nodeType":"127","messageId":"128","endLine":9,"endColumn":12},{"ruleId":"129","severity":2,"message":"130","line":102,"column":1,"nodeType":"131","messageId":"132"},{"ruleId":"125","severity":2,"message":"133","line":8,"column":26,"nodeType":"127","messageId":"128","endLine":8,"endColumn":35},{"ruleId":"134","severity":2,"message":"135","line":10,"column":5,"nodeType":"127","messageId":"136","endLine":10,"endColumn":38},{"ruleId":"134","severity":2,"message":"135","line":27,"column":7,"nodeType":"127","messageId":"136","endLine":27,"endColumn":34},{"ruleId":"137","severity":2,"message":"138","line":9,"column":22,"nodeType":"139","endLine":9,"endColumn":31},{"ruleId":"140","severity":2,"message":"141","line":29,"column":46,"nodeType":"142","messageId":"143","endLine":29,"endColumn":47,"suggestions":"144"},{"ruleId":"145","severity":2,"message":"146","line":115,"column":42,"nodeType":"139","endLine":115,"endColumn":46},{"ruleId":"145","severity":2,"message":"147","line":174,"column":42,"nodeType":"139","endLine":174,"endColumn":46},{"ruleId":"129","severity":2,"message":"148","line":199,"column":1,"nodeType":"131","messageId":"132"},{"ruleId":"145","severity":2,"message":"149","line":202,"column":43,"nodeType":"139","endLine":202,"endColumn":47},{"ruleId":"129","severity":2,"message":"150","line":340,"column":1,"nodeType":"131","messageId":"132"},{"ruleId":"129","severity":2,"message":"151","line":413,"column":1,"nodeType":"131","messageId":"132"},{"ruleId":"129","severity":2,"message":"151","line":415,"column":1,"nodeType":"131","messageId":"132"},{"ruleId":"152","severity":2,"message":"153","line":530,"column":17,"nodeType":"139","messageId":"154"},{"ruleId":"152","severity":2,"message":"153","line":531,"column":17,"nodeType":"127","messageId":"154"},{"ruleId":"152","severity":2,"message":"153","line":532,"column":17,"nodeType":"127","messageId":"154"},{"ruleId":"155","severity":2,"message":"156","line":535,"column":3,"nodeType":"139","messageId":"157","endLine":535,"endColumn":9},{"ruleId":"129","severity":2,"message":"158","line":18,"column":1,"nodeType":"131","messageId":"132"},{"ruleId":"145","severity":2,"message":"147","line":22,"column":27,"nodeType":"139","endLine":22,"endColumn":31},{"ruleId":"134","severity":2,"message":"135","line":5,"column":3,"nodeType":"127","messageId":"136","endLine":5,"endColumn":26},{"ruleId":"145","severity":2,"message":"159","line":2,"column":8,"nodeType":"139","endLine":2,"endColumn":14},{"ruleId":"129","severity":2,"message":"160","line":44,"column":1,"nodeType":"131","messageId":"132"},{"ruleId":"155","severity":2,"message":"161","line":44,"column":12,"nodeType":"139","messageId":"157","endLine":44,"endColumn":19},{"ruleId":"155","severity":2,"message":"161","line":45,"column":12,"nodeType":"139","messageId":"157","endLine":45,"endColumn":19},{"ruleId":"155","severity":2,"message":"161","line":47,"column":12,"nodeType":"139","messageId":"157","endLine":47,"endColumn":19},{"ruleId":"155","severity":2,"message":"161","line":48,"column":12,"nodeType":"139","messageId":"157","endLine":48,"endColumn":19},{"ruleId":"134","severity":2,"message":"135","line":5,"column":3,"nodeType":"127","messageId":"136","endLine":5,"endColumn":34},{"ruleId":"125","severity":2,"message":"162","line":8,"column":5,"nodeType":"127","messageId":"128","endLine":8,"endColumn":14},{"ruleId":"134","severity":2,"message":"135","line":10,"column":5,"nodeType":"127","messageId":"136","endLine":10,"endColumn":32},{"ruleId":"134","severity":2,"message":"135","line":20,"column":5,"nodeType":"127","messageId":"136","endLine":20,"endColumn":26},"fsd/jq-cache-dom-elements","Selector body was used 7 times. Try caching this DOM node instead","CallExpression","cacheDOMNodes","max-len","This line has a length of 143. Maximum allowed is 120.","Program","max","Selector body was used 4 times. Try caching this DOM node instead","fsd/jq-use-js-prefix-in-selector","All classes that are used to search the DOM must begin with \"js-\" prefix","useJsPrefix","no-shadow-restricted-names","Shadowing of global property 'undefined'.","Identifier","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["163","164"],"no-unused-vars","'type' is defined but never used.","'page' is defined but never used.","This line has a length of 150. Maximum allowed is 120.","'json' is defined but never used.","This line has a length of 125. Maximum allowed is 120.","This line has a length of 130. Maximum allowed is 120.","no-unexpected-multiline","Unexpected newline between object and [ of property access.","property","no-undef","'jQuery' is not defined.","undef","This line has a length of 127. Maximum allowed is 120.","'jquery' is defined but never used.","This line has a length of 202. Maximum allowed is 120.","'require' is not defined.","Selector body was used 2 times. Try caching this DOM node instead",{"messageId":"165","fix":"166","desc":"167"},{"messageId":"168","fix":"169","desc":"170"},"removeEscape",{"range":"171","text":"172"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"173","text":"174"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1015,1016],"",[1015,1015],"\\"]